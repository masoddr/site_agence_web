---
interface PricingItem {
  title: string;
  price?: string;
  description: string;
  features: string[];
  isPopular?: boolean;
  ctaText?: string;
  ctaLink?: string;
}

interface Props {
  title?: string;
  description?: string;
  items: PricingItem[];
}

const { 
  title = "Nos Tarifs",
  description = "Découvrez nos différentes formules adaptées à vos besoins",
  items = [
    {
      title: "Formule Basique",
      price: "À partir de 99€",
      description: "Idéal pour démarrer",
      features: [
        "Fonctionnalité 1",
        "Fonctionnalité 2",
        "Fonctionnalité 3"
      ],
      ctaText: "Choisir cette formule",
      ctaLink: "/contact"
    },
    {
      title: "Formule Pro",
      price: "À partir de 199€",
      description: "Notre formule la plus populaire",
      features: [
        "Tout de la formule Basique",
        "Fonctionnalité 4",
        "Fonctionnalité 5",
        "Fonctionnalité 6"
      ],
      isPopular: true,
      ctaText: "Choisir cette formule",
      ctaLink: "/contact"
    },
    {
      title: "Formule Premium",
      price: "Sur mesure",
      description: "Solution personnalisée",
      features: [
        "Tout de la formule Pro",
        "Fonctionnalité 7",
        "Fonctionnalité 8",
        "Fonctionnalité 9",
        "Support prioritaire"
      ],
      ctaText: "Nous contacter",
      ctaLink: "/contact"
    }
  ]
} = Astro.props;
---

<section class="py-20 bg-gray-50">
  <div class="container mx-auto px-4">
    <div class="text-center mb-16">
      <h2 class="text-4xl font-bold text-gray-900 mb-4">
        {title}
      </h2>
      <p class="text-xl text-gray-600 max-w-2xl mx-auto">
        {description}
      </p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {items.map((item) => (
        <div class={`bg-white rounded-xl shadow-lg p-8 relative ${item.isPopular ? 'ring-2 ring-blue-500' : ''}`}>
          {item.isPopular && (
            <div class="absolute -top-4 left-1/2 transform -translate-x-1/2">
              <span class="bg-blue-500 text-white px-4 py-1 rounded-full text-sm font-medium">
                Populaire
              </span>
            </div>
          )}
          
          <div class="text-center mb-8">
            <h3 class="text-2xl font-bold text-gray-900 mb-2">
              {item.title}
            </h3>
            {item.price && (
              <div class="text-3xl font-bold text-blue-600 mb-2">
                {item.price}
              </div>
            )}
            <p class="text-gray-600">
              {item.description}
            </p>
          </div>

          <ul class="space-y-4 mb-8">
            {item.features.map((feature) => (
              <li class="flex items-center text-gray-600">
                <svg class="w-5 h-5 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
                {feature}
              </li>
            ))}
          </ul>

          {item.ctaText && item.ctaLink && (
            <div class="text-center">
              <a 
                href={item.ctaLink}
                class={`inline-block px-6 py-3 rounded-lg font-semibold transition-colors ${
                  item.isPopular 
                    ? 'bg-blue-600 text-white hover:bg-blue-700' 
                    : 'bg-gray-100 text-gray-900 hover:bg-gray-200'
                }`}
              >
                {item.ctaText}
              </a>
            </div>
          )}
        </div>
      ))}
    </div>
  </div>
</section> 