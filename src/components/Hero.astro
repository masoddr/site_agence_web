---
interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;

const clients = [
  {
    type: "restaurateur",
    text: "restaurateur",
    image: "/images/hero/restaurateur.jpg",
  },
  {
    type: "avocat",
    text: "avocat",
    image: "/images/hero/avocat.jpg",
  },
  {
    type: "prof_dans_sante",
    text: "prof de danse",
    image: "/images/hero/prof_danse.jpg",
  },
  {
    type: "artisan",
    text: "artisan",
    image: "/images/hero/artisan.jpg",
  },
  {
    type: "coach_sportif",
    text: "coach sportif",
    image: "/images/hero/coach_sportif.jpg",
  },
];
---

<section class="relative h-screen">
  {clients.map((client, index) => (
    <div
      class:list={[
        "absolute inset-0 transition-opacity duration-1000",
        index === 0 ? "opacity-100" : "opacity-0"
      ]}
      data-client={client.type}
    >
      <img
        src={client.image}
        alt={`Image pour ${client.text}`}
        class:list={[
          "absolute inset-0 w-full h-full object-cover",
          (client.type === 'coach_sportif' || client.type === 'avocat' || client.type === 'artisan') ? "object-[70%_center] md:object-center" : "object-center"
        ]}
      />
      <div class="absolute inset-0 bg-black/60"></div>
    </div>
  ))}

  <div class="relative h-full flex items-center px-4">
    <div class="max-w-2xl md:ml-16 lg:ml-24 text-left">
      <h1 class="text-4xl md:text-6xl font-bold text-white mb-6 leading-tight">
        Vous êtes <br />
        <span class="inline-block min-w-[200px] align-middle relative h-[1.2em] w-full max-w-full">
          {clients.map((client, index) => (
            <span
              class:list={[
                "absolute left-0 top-0 w-auto max-w-full transition-opacity duration-500 whitespace-nowrap mb-2",
                index === 0 ? "opacity-100" : "opacity-0"
              ]}
              style="position: absolute; left: 0; top: 0; width: 100%;"
              data-client={client.type}
            >
              <span class="inline-block bg-white text-black font-bold rounded-md px-3 py-1 text-lg md:text-2xl md:rounded-lg md:px-4 md:py-2 shadow-lg max-w-full w-auto break-words mb-2 align-middle">
                {client.text}
              </span>
            </span>
          ))}
        </span>
        <br />
        Vous avez besoin d'un site internet ?
      </h1>
      <p class="text-xl md:text-2xl text-white/90 mb-8">
        Votre présence en ligne commence ici. Un site web moderne, rapide et optimisé pour votre activité.
      </p>
      <div class="flex flex-col sm:flex-row gap-4">
        <a
          href="/contact"
          class="bg-white text-gray-900 px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors"
        >
          Demander un devis gratuit
        </a>
        <a
          href="/portfolio"
          class="bg-transparent border-2 border-white text-white px-8 py-3 rounded-lg font-semibold hover:bg-white/10 transition-colors"
        >
          Voir mes réalisations
        </a>
      </div>
    </div>
  </div>
</section>

<script>
  const clients = document.querySelectorAll('[data-client]');
  let currentIndex = 0;

  function updateHero() {
    // Masquer tous les éléments
    clients.forEach(client => {
      client.classList.remove('opacity-100');
      client.classList.add('opacity-0');
    });

    // Afficher l'élément courant
    const currentClient = document.querySelectorAll(`[data-client="${clients[currentIndex].dataset.client}"]`);
    currentClient.forEach(client => {
      client.classList.remove('opacity-0');
      client.classList.add('opacity-100');
    });

    // Passer à l'élément suivant
    currentIndex = (currentIndex + 1) % (clients.length / 2);
  }

  // Changer toutes les 3 secondes
  setInterval(updateHero, 3000);
</script>

<style>
  [data-client] {
    transition: opacity 0.5s ease-in-out;
  }
</style> 