---
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';
import { siteConfig } from '../config/site';

interface Props {
  title?: string;
  description?: string;
  image?: string;
  canonicalURL?: string;
  noindex?: boolean;
}

const { 
  title = siteConfig.title,
  description = siteConfig.description,
  image = siteConfig.ogImage,
  canonicalURL = Astro.url.href,
  noindex = false
} = Astro.props;

const canonical = new URL(canonicalURL, siteConfig.url).toString();
---

<!DOCTYPE html>
<html lang="fr">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    
    <!-- SEO -->
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="keywords" content={siteConfig.keywords.join(', ')}" />
    <meta name="author" content={siteConfig.author.name}" />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonical} />
    
    <!-- Robots -->
    <meta name="robots" content={noindex ? "noindex,nofollow" : "index,follow"} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonical} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, siteConfig.url).toString()} />
    <meta property="og:site_name" content={siteConfig.name} />
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={new URL(image, siteConfig.url).toString()} />
    
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link 
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" 
      rel="stylesheet"
    />
    
    <!-- Global CSS -->
    <link rel="stylesheet" href="/styles/global.css" />
    
    <!-- Structured Data -->
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "Person",
      "name": siteConfig.author.name,
      "url": siteConfig.url,
      "jobTitle": "DÃ©veloppeur Web",
      "sameAs": [
        siteConfig.links.linkedin,
        siteConfig.links.github
      ],
      "email": siteConfig.author.email
    })} />
  </head>
  <body class="font-sans antialiased">
    <Navbar />
    <slot />
    <button 
      id="scrollToTop" 
      class="fixed bottom-6 right-6 z-50 bg-black text-white p-3 rounded-full shadow-lg opacity-0 invisible transition-all duration-300 hover:bg-gray-900"
      aria-label="Retour en haut de page"
    >
      <svg 
        xmlns="http://www.w3.org/2000/svg" 
        class="h-6 w-6" 
        fill="none" 
        viewBox="0 0 24 24" 
        stroke="currentColor"
      >
        <path 
          stroke-linecap="round" 
          stroke-linejoin="round" 
          stroke-width="2" 
          d="M5 10l7-7m0 0l7 7m-7-7v18" 
        />
      </svg>
    </button>
    <Footer />
  </body>
</html>

<script>
  const scrollToTopButton = document.getElementById('scrollToTop');
  
  // Show/hide button based on scroll position
  window.addEventListener('scroll', () => {
    if (window.scrollY > 300) {
      scrollToTopButton?.classList.remove('opacity-0', 'invisible');
      scrollToTopButton?.classList.add('opacity-100', 'visible');
    } else {
      scrollToTopButton?.classList.add('opacity-0', 'invisible');
      scrollToTopButton?.classList.remove('opacity-100', 'visible');
    }
  });

  // Smooth scroll to top when clicked
  scrollToTopButton?.addEventListener('click', () => {
    window.scrollTo({
      top: 0,
      behavior: 'smooth'
    });
  });
</script> 